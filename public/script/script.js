async function ask_AI(birth) {
  const p_nine_birth = get_str_nine_month(birth);

  const prompt = get_special_birth_prompt(p_nine_birth);

  const res = await fetch('http://localhost:3000/api/ask', {

    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ prompt })

  });

  const data = await res.json();
  const reply = data.reply || data.error;

  try {
    let cleanReply = reply.replace(/```json\s*/g, '').replace(/```\s*$/g, '').trim();

    return JSON.parse(cleanReply);
  } catch (e) {

    return { error: reply };

  }
}

function get_special_birth_prompt(minus_birth) {
  const text = `‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${minus_birth}.
‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥
1. ‡πÉ‡∏´‡πâ‡∏´‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ô‡∏±‡πâ‡∏ô ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
2. ‡∏Ñ‡∏≥‡∏Ñ‡∏°‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡πÅ‡∏ö‡∏ö‡πÇ‡∏á‡πà‡πÅ‡∏ï‡πà‡∏î‡∏π‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå ‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ô‡∏±‡πâ‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡∏ñ‡πâ‡∏≤‡∏ß‡∏±‡∏ô‡∏•‡∏≠‡∏¢‡∏Å‡∏£‡∏∞‡∏ó‡∏á ‡∏Å‡πá‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏∑‡πà‡∏≠‡∏ñ‡∏∂‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏±‡πâ‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡∏û‡∏£‡∏∞‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå
3. ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏≥‡∏Ñ‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏°‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡∏°‡∏µ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏π‡πâ‡πÇ‡∏•‡∏Å‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡πÇ‡∏î‡∏¢‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ 80% ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Å‡∏≠‡∏ö‡∏Å‡∏π‡πâ‡πÑ‡∏î‡πâ
  - ‡∏ñ‡πâ‡∏≤‡∏Å‡∏π‡πâ‡πÇ‡∏•‡∏Å‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏π‡πâ‡πÇ‡∏•‡∏Å‡πÑ‡∏î‡πâ ‡πÅ‡∏•‡∏∞ ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡πÇ‡∏á‡πà ‡πÜ ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ñ‡∏° ‡πÅ‡∏ï‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå
  - ‡∏ñ‡πâ‡∏≤‡∏Å‡∏π‡πâ‡πÇ‡∏•‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏¢‡∏ß‡πà‡∏≤ ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡∏Ç‡∏≤‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå ‡πÅ‡∏•‡∏∞ ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡πÇ‡∏á‡πà ‡πÜ ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ñ‡∏° ‡πÅ‡∏ï‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå
‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥
1. ‡∏Ñ‡∏≥‡∏Ñ‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÅ‡∏ô‡∏ß 18+

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á JSON ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:

{
  "isSpecialDay": true/false,
  "todaySpecial": {
    "name": "...",
    "description": "..."
  },
  "nextClosestSpecialDay": {
    "name": "...",
    "date": "DD-MM-YYYY",
    "daysUntil": ...
  },
  "quoteOfTheDay": "...",
  "cansavetheworld": "..."
}

‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ markdown ‡∏´‡∏£‡∏∑‡∏≠ backticks`;

  return text
}

function get_str_nine_month(birth) {
  const nine_month_past = new Date(birth);
  nine_month_past.setMonth(nine_month_past.getMonth() - 9);

  const day = nine_month_past.getDate().toString().padStart(2, "0");
  const month = (nine_month_past.getMonth() + 1).toString().padStart(2, "0");
  const year = nine_month_past.getFullYear().toString().padStart(4, "0");

  return day + '/' + month + '/' + year;
}

function get_birth() {
  const dob = document.getElementById('birthday').value;

  return (dob) ? dob : alert('‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏∞‡∏à‡πâ‡∏∞‡∏Ñ‡∏ô‡∏î‡∏µ');
}

// Global variable to store the last API response
let lastApiResponse = null;

async function show_calculated_date() {
  const dob = get_birth();
  if (!dob) return;

  // Reset result div and hide world saving button each function call
  document.getElementById('result').innerHTML = '';
  document.getElementById('worldSavingBtn').style.display = 'none';
  lastApiResponse = null;

  try {
    const importantEvent = await ask_AI(dob);
    lastApiResponse = importantEvent; // Store the response

    let res = '';

    res += `‡∏ß‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß: ${get_str_nine_month(dob)}<br>`;

    if (importantEvent.error) {
      res += `<p>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${importantEvent.error}</p>`;
    }

    else if (importantEvent.isSpecialDay) {
      res += `<p><strong>‡∏ß‡∏±‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ${importantEvent.todaySpecial.name}</strong></p>`;
    }

    else {
      const daysUntil = importantEvent.nextClosestSpecialDay.daysUntil;
      const isFuture = daysUntil > 0;

      res += `<p><strong>${importantEvent.nextClosestSpecialDay.name}</strong> <br> -<em>${importantEvent.quoteOfTheDay}</em></br></p>
      ${isFuture ? '‡∏à‡∏∞‡∏ñ‡∏∂‡∏á‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å' : '‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß'} ${Math.abs(daysUntil)} ‡∏ß‡∏±‡∏ô`;
    }

    // res += `<br><em>${importantEvent.quoteOfTheDay}</em></br>`;

    document.getElementById('result').innerHTML = res;
    
    // Show the world saving button if we have valid data
    if (!importantEvent.error && importantEvent.cansavetheworld) {
      document.getElementById('worldSavingBtn').style.display = 'inline-block';
    }
  } catch (error) {
    document.getElementById('result').innerHTML += `<p>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}</p>`;
  }
}

function show_world_saving_prediction() {
  if (!lastApiResponse || !lastApiResponse.cansavetheworld) {
    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏Å‡∏¥‡∏î‡∏°‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏á‡∏ô‡∏∞" ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡πÇ‡∏•‡∏Å');
    return;
  }

  const modal = document.getElementById('worldSavingModal');
  const resultDiv = document.getElementById('worldSavingResult');
  
  // Create animated content
  const worldSavingText = lastApiResponse.cansavetheworld;
  const emojis = ['üòéüôàüôà', 'üòîüíïüòî', 'üíÅüèª', 'üëÅÔ∏èüëÑüëÅÔ∏è', 'üëÅÔ∏èü´¶üëÅÔ∏è', '‚¨Æ‚¨Æ‚ãÆ‚ãÆ‚¨Æ‚¨Æ', 'üíã', 'üåà', 'ü•µü•µü•µü•µ'];
  const randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];
  
  resultDiv.innerHTML = `
    <div class="world-saving-emoji">${randomEmoji}</div>
    <div class="world-saving-text">${worldSavingText}</div>
    <div class="world-saving-emoji">${randomEmoji}</div>
  `;
  
  modal.style.display = 'block';
}

// Close modal when clicking on X
document.addEventListener('DOMContentLoaded', function() {
  const modal = document.getElementById('worldSavingModal');
  const span = document.getElementsByClassName('close')[0];
  
  span.onclick = function() {
    modal.style.display = 'none';
  }
  
  // Close modal when clicking outside of it
  window.onclick = function(event) {
    if (event.target == modal) {
      modal.style.display = 'none';
    }
  }
});
